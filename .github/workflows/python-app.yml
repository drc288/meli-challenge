# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Replace tokens .env
      run: |
        find .env -type f -exec sed -i ''s/#{MONGOUSER}#/${{ secrets.MONGOUSER }}/g'' {} \;
        find .env -type f -exec sed -i ''s/#{MONGODB}#/${{ secrets.MONGODB }}/g'' {} \;
        find .env -type f -exec sed -i ''s/#{MONGOPASSWORD}#/${{ secrets.MONGOPASSWORD }}/g'' {} \;
    - name: start server and run postman
      run: |
        pwd
        uvicorn app.main:app &
        ./app/test/postman/run-api-test.sh
        
  docker:
    runs-on: ubuntu-latest
    needs: build_and_test
    
    steps:
    - name: check out repo
      uses: actions/checkout@v2
      
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      uses: docker/login-action@v1.10.0
      with:
        username: ${{ secrets.DOCKERLOGIN }}
        password: ${{ secrets.DOCKERPASSWORD }}
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERLOGIN }}/meli_challenge:latest
    
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
